#include "Random.hpp"

#include "exceptions/BadAlphaLength.hpp"

const std::vector<uint8_t> Random::generateBytesVector(const uint32_t length)
{
   std::vector<uint8_t> perm_key;
   perm_key.reserve(length);

   for (uint32_t i = 0; i < length; ++i)
   {
      perm_key.push_back((rand() % (length - 1)) & 0xFF);
   }

   return perm_key;
}

// Return a string generated by choosing random characters in alphabet.
const std::string Random::generateString(const uint32_t length, const std::string &alphabet)
{
   if(length > alphabet.length())
   {
      throw BadAlphaLength("The length you provided is greater than the alphabet's length.", length);
   }
   
   std::string str = "";
   str.reserve(length);

   for (uint32_t i = 0; i < length; ++i)
   {
      str += alphabet[rand() % (length - 1)];
   }

   return str;
}